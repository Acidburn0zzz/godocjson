{
  "type": "package",
  "doc": "Package uuid provides implementation of Universally Unique Identifier (UUID).\nSupported versions are 1, 3, 4 and 5 (as specified in RFC 4122) and\nversion 2 (as specified in DCE 1.1).\n",
  "name": "uuid",
  "importPath": "go.uuid/",
  "imports": [
    "bytes",
    "crypto/md5",
    "crypto/rand",
    "crypto/sha1",
    "encoding/binary",
    "encoding/hex",
    "fmt",
    "hash",
    "net",
    "os",
    "sync",
    "testing",
    "time"
  ],
  "filenames": [
    "go.uuid/benchmarks_test.go",
    "go.uuid/uuid.go",
    "go.uuid/uuid_test.go"
  ],
  "notes": {},
  "bugs": null,
  "consts": [
    {
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "doc": "UUID layout variants.\n",
      "names": [
        "VariantNCS",
        "VariantRFC4122",
        "VariantMicrosoft",
        "VariantFuture"
      ],
      "type": "const",
      "filename": "go.uuid/uuid.go",
      "line": 43
    },
    {
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "doc": "UUID DCE domains.\n",
      "names": [
        "DomainPerson",
        "DomainGroup",
        "DomainOrg"
      ],
      "type": "const",
      "filename": "go.uuid/uuid.go",
      "line": 51
    }
  ],
  "types": [
    {
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "doc": "UUID representation compliant with specification\ndescribed in RFC 4122.\n",
      "name": "UUID",
      "type": "type",
      "filename": "",
      "line": 0,
      "consts": [],
      "vars": [],
      "funcs": [
        {
          "doc": "And returns result of binary AND of two UUIDs.\n",
          "name": "And",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 132,
          "parameters": [
            {
              "type": "UUID",
              "name": "u1"
            },
            {
              "type": "UUID",
              "name": "u2"
            }
          ],
          "recv": "",
          "orig": ""
        },
        {
          "doc": "FromBytes returns UUID converted from raw byte slice input.\nIt will return error if the slice isn't 16 bytes long.\n",
          "name": "FromBytes",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 287,
          "parameters": [
            {
              "type": "[]byte",
              "name": "input"
            }
          ],
          "recv": "",
          "orig": ""
        },
        {
          "doc": "FromString returns UUID parsed from string input.\nInput is expected in a form accepted by UnmarshalText.\n",
          "name": "FromString",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 294,
          "parameters": [
            {
              "type": "string",
              "name": "input"
            }
          ],
          "recv": "",
          "orig": ""
        },
        {
          "doc": "NewV1 returns UUID based on current timestamp and MAC address.\n",
          "name": "NewV1",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 317,
          "parameters": [],
          "recv": "",
          "orig": ""
        },
        {
          "doc": "NewV2 returns DCE Security UUID based on POSIX UID/GID.\n",
          "name": "NewV2",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 336,
          "parameters": [
            {
              "type": "byte",
              "name": "domain"
            }
          ],
          "recv": "",
          "orig": ""
        },
        {
          "doc": "NewV3 returns UUID based on MD5 hash of namespace UUID and name.\n",
          "name": "NewV3",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 362,
          "parameters": [
            {
              "type": "UUID",
              "name": "ns"
            },
            {
              "type": "string",
              "name": "name"
            }
          ],
          "recv": "",
          "orig": ""
        },
        {
          "doc": "NewV4 returns random generated UUID.\n",
          "name": "NewV4",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 371,
          "parameters": [],
          "recv": "",
          "orig": ""
        },
        {
          "doc": "NewV5 returns UUID based on SHA-1 hash of namespace UUID and name.\n",
          "name": "NewV5",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 381,
          "parameters": [
            {
              "type": "UUID",
              "name": "ns"
            },
            {
              "type": "string",
              "name": "name"
            }
          ],
          "recv": "",
          "orig": ""
        },
        {
          "doc": "Or returns result of binary OR of two UUIDs.\n",
          "name": "Or",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 141,
          "parameters": [
            {
              "type": "UUID",
              "name": "u1"
            },
            {
              "type": "UUID",
              "name": "u2"
            }
          ],
          "recv": "",
          "orig": ""
        }
      ],
      "methods": [
        {
          "doc": "Bytes returns bytes slice representation of UUID.\n",
          "name": "Bytes",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 173,
          "parameters": [],
          "recv": "UUID",
          "orig": "UUID"
        },
        {
          "doc": "MarshalBinary implements the encoding.BinaryMarshaler interface.\n",
          "name": "MarshalBinary",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 250,
          "parameters": [],
          "recv": "UUID",
          "orig": "UUID"
        },
        {
          "doc": "MarshalText implements the encoding.TextMarshaler interface.\nThe encoding is the same as returned by String.\n",
          "name": "MarshalText",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 207,
          "parameters": [],
          "recv": "UUID",
          "orig": "UUID"
        },
        {
          "doc": "Scan implements the sql.Scanner interface.\nA 16-byte slice is handled by UnmarshalBinary, while\na longer byte slice or a string is handled by UnmarshalText.\n",
          "name": "Scan",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 270,
          "parameters": [
            {
              "type": "interface{}",
              "name": "src"
            }
          ],
          "recv": "*UUID",
          "orig": "*UUID"
        },
        {
          "doc": "SetVariant sets variant bits as described in RFC 4122.\n",
          "name": "SetVariant",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 201,
          "parameters": [],
          "recv": "*UUID",
          "orig": "*UUID"
        },
        {
          "doc": "SetVersion sets version bits.\n",
          "name": "SetVersion",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 196,
          "parameters": [
            {
              "type": "byte",
              "name": "v"
            }
          ],
          "recv": "*UUID",
          "orig": "*UUID"
        },
        {
          "doc": "Returns canonical string representation of UUID:\nxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n",
          "name": "String",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 179,
          "parameters": [],
          "recv": "UUID",
          "orig": "UUID"
        },
        {
          "doc": "UnmarshalBinary implements the encoding.BinaryUnmarshaler interface.\nIt will return error if the slice isn't 16 bytes long.\n",
          "name": "UnmarshalBinary",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 257,
          "parameters": [
            {
              "type": "[]byte",
              "name": "data"
            }
          ],
          "recv": "*UUID",
          "orig": "*UUID"
        },
        {
          "doc": "UnmarshalText implements the encoding.TextUnmarshaler interface.\nFollowing formats are supported:\n\"6ba7b810-9dad-11d1-80b4-00c04fd430c8\",\n\"{6ba7b810-9dad-11d1-80b4-00c04fd430c8}\",\n\"urn:uuid:6ba7b810-9dad-11d1-80b4-00c04fd430c8\"\n",
          "name": "UnmarshalText",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 217,
          "parameters": [
            {
              "type": "[]byte",
              "name": "text"
            }
          ],
          "recv": "*UUID",
          "orig": "*UUID"
        },
        {
          "doc": "Variant returns UUID layout variant.\n",
          "name": "Variant",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 160,
          "parameters": [],
          "recv": "UUID",
          "orig": "UUID"
        },
        {
          "doc": "Version returns algorithm version used to generate UUID.\n",
          "name": "Version",
          "packageName": "uuid",
          "packageImportPath": "go.uuid/",
          "type": "func",
          "filename": "go.uuid/uuid.go",
          "line": 155,
          "parameters": [],
          "recv": "UUID",
          "orig": "UUID"
        }
      ]
    }
  ],
  "vars": [
    {
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "doc": "Predefined namespace UUIDs.\n",
      "names": [
        "NamespaceDNS",
        "NamespaceURL",
        "NamespaceOID",
        "NamespaceX500"
      ],
      "type": "var",
      "filename": "go.uuid/uuid.go",
      "line": 124
    },
    {
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "doc": "The nil UUID is special form of UUID that is specified to have all\n128 bits set to zero.\n",
      "names": [
        "Nil"
      ],
      "type": "var",
      "filename": "go.uuid/uuid.go",
      "line": 121
    }
  ],
  "funcs": [
    {
      "doc": "",
      "name": "BenchmarkFromBytes",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/benchmarks_test.go",
      "line": 28,
      "parameters": [
        {
          "type": "*testing.B",
          "name": "b"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "BenchmarkFromString",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/benchmarks_test.go",
      "line": 35,
      "parameters": [
        {
          "type": "*testing.B",
          "name": "b"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "BenchmarkFromStringUrn",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/benchmarks_test.go",
      "line": 42,
      "parameters": [
        {
          "type": "*testing.B",
          "name": "b"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "BenchmarkFromStringWithBrackets",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/benchmarks_test.go",
      "line": 49,
      "parameters": [
        {
          "type": "*testing.B",
          "name": "b"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "BenchmarkMarshalBinary",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/benchmarks_test.go",
      "line": 86,
      "parameters": [
        {
          "type": "*testing.B",
          "name": "b"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "BenchmarkMarshalText",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/benchmarks_test.go",
      "line": 93,
      "parameters": [
        {
          "type": "*testing.B",
          "name": "b"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "BenchmarkMarshalToString",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/benchmarks_test.go",
      "line": 116,
      "parameters": [
        {
          "type": "*testing.B",
          "name": "b"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "BenchmarkNewV1",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/benchmarks_test.go",
      "line": 56,
      "parameters": [
        {
          "type": "*testing.B",
          "name": "b"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "BenchmarkNewV2",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/benchmarks_test.go",
      "line": 62,
      "parameters": [
        {
          "type": "*testing.B",
          "name": "b"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "BenchmarkNewV3",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/benchmarks_test.go",
      "line": 68,
      "parameters": [
        {
          "type": "*testing.B",
          "name": "b"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "BenchmarkNewV4",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/benchmarks_test.go",
      "line": 74,
      "parameters": [
        {
          "type": "*testing.B",
          "name": "b"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "BenchmarkNewV5",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/benchmarks_test.go",
      "line": 80,
      "parameters": [
        {
          "type": "*testing.B",
          "name": "b"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "BenchmarkUnmarshalBinary",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/benchmarks_test.go",
      "line": 100,
      "parameters": [
        {
          "type": "*testing.B",
          "name": "b"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "BenchmarkUnmarshalText",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/benchmarks_test.go",
      "line": 108,
      "parameters": [
        {
          "type": "*testing.B",
          "name": "b"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "Equal returns true if u1 and u2 equals, otherwise returns false.\n",
      "name": "Equal",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid.go",
      "line": 150,
      "parameters": [
        {
          "type": "UUID",
          "name": "u1"
        },
        {
          "type": "UUID",
          "name": "u2"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestAnd",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 66,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestBytes",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 29,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestEqual",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 45,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestFromBytes",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 129,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestFromString",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 187,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestMarshalBinary",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 150,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestMarshalText",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 227,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestNewV1",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 342,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestNewV2",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 373,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestNewV3",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 395,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestNewV4",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 433,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestNewV5",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 445,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestOr",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 55,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestScanBinary",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 264,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestScanString",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 287,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestScanText",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 310,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestScanUnsupported",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 333,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestSetVariant",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 120,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestSetVersion",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 85,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestString",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 39,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestUnmarshalBinary",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 164,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestUnmarshalText",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 241,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestVariant",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 94,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    },
    {
      "doc": "",
      "name": "TestVersion",
      "packageName": "uuid",
      "packageImportPath": "go.uuid/",
      "type": "func",
      "filename": "go.uuid/uuid_test.go",
      "line": 77,
      "parameters": [
        {
          "type": "*testing.T",
          "name": "t"
        }
      ],
      "recv": "",
      "orig": ""
    }
  ]
}
